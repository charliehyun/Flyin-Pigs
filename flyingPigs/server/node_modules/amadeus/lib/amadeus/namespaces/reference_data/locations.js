"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;

var _airports = _interopRequireDefault(require("./locations/airports"));

var _cities = _interopRequireDefault(require("./locations/cities"));

var _hotel = _interopRequireDefault(require("./locations/hotel"));

var _hotels = _interopRequireDefault(require("./locations/hotels"));

var _poi = _interopRequireDefault(require("./locations/poi"));

var _pois = _interopRequireDefault(require("./locations/pois"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

/**
 * A namespaced client for the
 * `/v2/reference-data/locations` endpoints
 *
 * Access via the {@link Amadeus} object
 *
 * ```js
 * let amadeus = new Amadeus();
 * amadeus.referenceData.locations;
 * ```
 *
 * @param {Client} client
 * @property {Airports} airports
 */
var Locations = /*#__PURE__*/function () {
  function Locations(client) {
    _classCallCheck(this, Locations);

    this.client = client;
    this.airports = new _airports["default"](client);
    this.cities = new _cities["default"](client);
    this.hotel = new _hotel["default"](client);
    this.hotels = new _hotels["default"](client);
    this.pointsOfInterest = new _pois["default"](client);
  }
  /**
   * Returns a list of airports and cities matching a given keyword.
   *
   * @param {Object} params
   * @param {string} params.keyword keyword that should represent the start of
   *   a word in a city or airport name or code
   * @param {string} params.subType the type of location to search for
   * @return {Promise.<Response,ResponseError>} a Promise
   *
   * Find any location starting with 'lon'
   *
   * ```js
   * amadeus.referenceData.locations.get({
   *   keyword: 'lon',
   *   subType: Amadeus.location.any
   * });
   * ```
   */


  _createClass(Locations, [{
    key: "get",
    value: function get() {
      var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      return this.client.get('/v1/reference-data/locations', params);
    }
  }, {
    key: "pointOfInterest",
    value: function pointOfInterest(poiId) {
      return new _poi["default"](this.client, poiId);
    }
  }]);

  return Locations;
}();

var _default = Locations;
exports["default"] = _default;
module.exports = exports.default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJMb2NhdGlvbnMiLCJjbGllbnQiLCJhaXJwb3J0cyIsIkFpcnBvcnRzIiwiY2l0aWVzIiwiQ2l0aWVzIiwiaG90ZWwiLCJIb3RlbCIsImhvdGVscyIsIkhvdGVscyIsInBvaW50c09mSW50ZXJlc3QiLCJQb2ludHNPZkludGVyZXN0IiwicGFyYW1zIiwiZ2V0IiwicG9pSWQiLCJQb2ludE9mSW50ZXJlc3QiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvYW1hZGV1cy9uYW1lc3BhY2VzL3JlZmVyZW5jZV9kYXRhL2xvY2F0aW9ucy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgQWlycG9ydHMgZnJvbSAnLi9sb2NhdGlvbnMvYWlycG9ydHMnO1xuaW1wb3J0IENpdGllcyBmcm9tICcuL2xvY2F0aW9ucy9jaXRpZXMnO1xuaW1wb3J0IEhvdGVsIGZyb20gJy4vbG9jYXRpb25zL2hvdGVsJztcbmltcG9ydCBIb3RlbHMgZnJvbSAnLi9sb2NhdGlvbnMvaG90ZWxzJztcbmltcG9ydCBQb2ludE9mSW50ZXJlc3QgZnJvbSAnLi9sb2NhdGlvbnMvcG9pJztcbmltcG9ydCBQb2ludHNPZkludGVyZXN0IGZyb20gJy4vbG9jYXRpb25zL3BvaXMnO1xuXG4vKipcbiAqIEEgbmFtZXNwYWNlZCBjbGllbnQgZm9yIHRoZVxuICogYC92Mi9yZWZlcmVuY2UtZGF0YS9sb2NhdGlvbnNgIGVuZHBvaW50c1xuICpcbiAqIEFjY2VzcyB2aWEgdGhlIHtAbGluayBBbWFkZXVzfSBvYmplY3RcbiAqXG4gKiBgYGBqc1xuICogbGV0IGFtYWRldXMgPSBuZXcgQW1hZGV1cygpO1xuICogYW1hZGV1cy5yZWZlcmVuY2VEYXRhLmxvY2F0aW9ucztcbiAqIGBgYFxuICpcbiAqIEBwYXJhbSB7Q2xpZW50fSBjbGllbnRcbiAqIEBwcm9wZXJ0eSB7QWlycG9ydHN9IGFpcnBvcnRzXG4gKi9cbmNsYXNzIExvY2F0aW9ucyB7XG4gIGNvbnN0cnVjdG9yKGNsaWVudCkge1xuICAgIHRoaXMuY2xpZW50ID0gY2xpZW50O1xuICAgIHRoaXMuYWlycG9ydHMgPSBuZXcgQWlycG9ydHMoY2xpZW50KTtcbiAgICB0aGlzLmNpdGllcyA9IG5ldyBDaXRpZXMoY2xpZW50KTtcbiAgICB0aGlzLmhvdGVsID0gbmV3IEhvdGVsKGNsaWVudCk7XG4gICAgdGhpcy5ob3RlbHMgPSBuZXcgSG90ZWxzKGNsaWVudCk7XG4gICAgdGhpcy5wb2ludHNPZkludGVyZXN0ID0gbmV3IFBvaW50c09mSW50ZXJlc3QoY2xpZW50KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgbGlzdCBvZiBhaXJwb3J0cyBhbmQgY2l0aWVzIG1hdGNoaW5nIGEgZ2l2ZW4ga2V5d29yZC5cbiAgICpcbiAgICogQHBhcmFtIHtPYmplY3R9IHBhcmFtc1xuICAgKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLmtleXdvcmQga2V5d29yZCB0aGF0IHNob3VsZCByZXByZXNlbnQgdGhlIHN0YXJ0IG9mXG4gICAqICAgYSB3b3JkIGluIGEgY2l0eSBvciBhaXJwb3J0IG5hbWUgb3IgY29kZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gcGFyYW1zLnN1YlR5cGUgdGhlIHR5cGUgb2YgbG9jYXRpb24gdG8gc2VhcmNoIGZvclxuICAgKiBAcmV0dXJuIHtQcm9taXNlLjxSZXNwb25zZSxSZXNwb25zZUVycm9yPn0gYSBQcm9taXNlXG4gICAqXG4gICAqIEZpbmQgYW55IGxvY2F0aW9uIHN0YXJ0aW5nIHdpdGggJ2xvbidcbiAgICpcbiAgICogYGBganNcbiAgICogYW1hZGV1cy5yZWZlcmVuY2VEYXRhLmxvY2F0aW9ucy5nZXQoe1xuICAgKiAgIGtleXdvcmQ6ICdsb24nLFxuICAgKiAgIHN1YlR5cGU6IEFtYWRldXMubG9jYXRpb24uYW55XG4gICAqIH0pO1xuICAgKiBgYGBcbiAgICovXG4gIGdldChwYXJhbXMgPSB7fSkge1xuICAgIHJldHVybiB0aGlzLmNsaWVudC5nZXQoJy92MS9yZWZlcmVuY2UtZGF0YS9sb2NhdGlvbnMnLCBwYXJhbXMpO1xuICB9XG5cbiAgcG9pbnRPZkludGVyZXN0KHBvaUlkKSB7XG4gICAgcmV0dXJuIG5ldyBQb2ludE9mSW50ZXJlc3QodGhpcy5jbGllbnQsIHBvaUlkKTtcbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IExvY2F0aW9ucztcbiJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7Ozs7Ozs7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtJQUNNQSxTO0VBQ0osbUJBQVlDLE1BQVosRUFBb0I7SUFBQTs7SUFDbEIsS0FBS0EsTUFBTCxHQUFjQSxNQUFkO0lBQ0EsS0FBS0MsUUFBTCxHQUFnQixJQUFJQyxvQkFBSixDQUFhRixNQUFiLENBQWhCO0lBQ0EsS0FBS0csTUFBTCxHQUFjLElBQUlDLGtCQUFKLENBQVdKLE1BQVgsQ0FBZDtJQUNBLEtBQUtLLEtBQUwsR0FBYSxJQUFJQyxpQkFBSixDQUFVTixNQUFWLENBQWI7SUFDQSxLQUFLTyxNQUFMLEdBQWMsSUFBSUMsa0JBQUosQ0FBV1IsTUFBWCxDQUFkO0lBQ0EsS0FBS1MsZ0JBQUwsR0FBd0IsSUFBSUMsZ0JBQUosQ0FBcUJWLE1BQXJCLENBQXhCO0VBQ0Q7RUFFRDtBQUNGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7O1dBQ0UsZUFBaUI7TUFBQSxJQUFiVyxNQUFhLHVFQUFKLEVBQUk7TUFDZixPQUFPLEtBQUtYLE1BQUwsQ0FBWVksR0FBWixDQUFnQiw4QkFBaEIsRUFBZ0RELE1BQWhELENBQVA7SUFDRDs7O1dBRUQseUJBQWdCRSxLQUFoQixFQUF1QjtNQUNyQixPQUFPLElBQUlDLGVBQUosQ0FBb0IsS0FBS2QsTUFBekIsRUFBaUNhLEtBQWpDLENBQVA7SUFDRDs7Ozs7O2VBSVlkLFMifQ==